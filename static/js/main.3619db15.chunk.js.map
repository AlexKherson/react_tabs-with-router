{"version":3,"sources":["components/PageNavLink.tsx","components/NavBar.tsx","App.tsx","pages/TabsPage.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","index.tsx"],"names":["PageNavLink","props","to","title","className","isActive","classNames","NavBar","App","tabs","id","content","TabsPage","useParams","tabId","selectedTab","useMemo","find","tab","includes","map","isSelected","HomePage","NotFoundPage","ReactDOM","render","path","element","index","document","getElementById"],"mappings":"gPASaA,EAAoC,SAACC,GAChD,IAAQC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MAEZ,OACE,cAAC,IAAD,CACED,GAAIA,EACJE,UACE,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAChB,cAAe,CACb,YAAaD,KALrB,SAUGF,KCrBMI,EAAS,WACpB,OACE,qBACEH,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaF,GAAG,IAAIC,MAAM,SAC1B,cAAC,EAAD,CAAaD,GAAG,QAAQC,MAAM,iBCC3BK,EAAM,kBACjB,qCAEE,cAAC,EAAD,IACA,qBAAKJ,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,Y,OCdFK,EAAO,CACX,CAAEC,GAAI,QAASP,MAAO,QAASQ,QAAS,eACxC,CAAED,GAAI,QAASP,MAAO,QAASQ,QAAS,eACxC,CAAED,GAAI,QAASP,MAAO,QAASQ,QAAS,gBAG7BC,EAAW,WACtB,MAAuBC,cAAfC,aAAR,MAAgB,GAAhB,EACMC,EAAcC,mBAClB,kBAAMP,EAAKQ,MAAK,SAAAC,GAAG,OAAIJ,EAAMK,SAASD,EAAIR,SAC1C,CAACI,IAGH,OACE,qCACE,oBAAIV,UAAU,QAAd,uBACA,qBAAKA,UAAU,gBAAf,SACE,6BACGK,EAAKW,KAAI,SAAAF,GACR,IAAMG,EAAaP,EAAMK,SAASD,EAAIR,IAEtC,OACE,oBACE,UAAQ,MACRN,UAAWE,IAAW,CAAE,YAAae,IAFvC,SAKE,cAAC,IAAD,CAAMnB,GAAE,gBAAWgB,EAAIR,IAAvB,SAA8BQ,EAAIf,SAF7Be,EAAIR,WASnB,qBAAKN,UAAU,QAAQ,UAAQ,aAA/B,SACGW,EAAW,UAAOA,EAAYJ,SAAa,4BCvCvCW,EAAW,kBAAM,oBAAIlB,UAAU,QAAd,wBCAjBmB,EAAe,kBAAM,oBAAInB,UAAU,QAAd,6BCYlCoB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUzB,GAAG,QAC1C,eAAC,IAAD,CACEwB,KAAK,QADP,UAGE,cAAC,IAAD,CACEE,OAAK,EACLD,QAAS,cAAC,EAAD,MAGX,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,cAAC,EAAD,SAGrC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,eAKjCE,SAASC,eAAe,W","file":"static/js/main.3619db15.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface PageNavLinkProps {\n  to: string,\n  title: string,\n}\n\nexport const PageNavLink: FC<PageNavLinkProps> = (props) => {\n  const { to, title } = props;\n\n  return (\n    <NavLink\n      to={to}\n      className={\n        ({ isActive }) => classNames(\n          'navbar-item', {\n            'is-active': isActive,\n          },\n        )\n      }\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from './PageNavLink';\n\nexport const NavBar = () => {\n  return (\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" title=\"Home\" />\n          <PageNavLink to=\"/tabs\" title=\"Tabs\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { NavBar } from './components/NavBar';\n\n// const tabs = [\n//   { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n//   { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n//   { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n// ];\n\nexport const App = () => (\n  <>\n    {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n    <NavBar />\n    <div className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n        {/* <h1 className=\"title\">Home page</h1>\n        <h1 className=\"title\">Tabs page</h1>\n        <h1 className=\"title\">Page not found</h1> */}\n      </div>\n    </div>\n  </>\n);\n","import classNames from 'classnames';\nimport { useMemo } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage = () => {\n  const { tabId = '' } = useParams();\n  const selectedTab = useMemo(\n    () => tabs.find(tab => tabId.includes(tab.id)),\n    [tabId],\n  );\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const isSelected = tabId.includes(tab.id);\n\n            return (\n              <li\n                data-cy=\"Tab\"\n                className={classNames({ 'is-active': isSelected })}\n                key={tab.id}\n              >\n                <Link to={`/tabs/${tab.id}`}>{tab.title}</Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab ? (`${selectedTab.content}`) : 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => <h1 className=\"title\">Home page</h1>;\n","export const NotFoundPage = () => <h1 className=\"title\">Page not found</h1>;\n","import ReactDOM from 'react-dom';\nimport {\n  HashRouter,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { TabsPage } from './pages/TabsPage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nReactDOM.render(\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n          <Route\n            path=\"/tabs\"\n          >\n            <Route\n              index\n              element={<TabsPage />}\n            />\n\n            <Route path=\"/tabs:tabId\" element={<TabsPage />} />\n\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Route>\n    </Routes>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}